# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: default

stages:
  
- stage : Build
  variables:
    environment: QA
  jobs:    
  - job: 'Build_Stage_Job1'    
    displayName: 'Env $(environment)'
    steps:
    - script: echo "stage1, job1, step1  For App $(appname) for Env $(environment)"
    - script: echo "stage1, job1, step2"
  - job: 'Build_Stage_Job2'    
    steps:    
    - script: echo "stage1, job2, step1"
    - script: echo "stage1, job2, step2"

- stage : Test
  dependsOn: Build
  jobs:
  - job: 'Test_Stage_Job1'
    steps:
    - script: echo "stage Test, job1, step1"    


- stage : UAT
  dependsOn: Build
  jobs:
  - job: 'UAT_Stage_Job1'
    steps:
    - script: echo "UAT Test, job1, step1"      
    - script: echo $(Agent.BuildDirectory)	
    - script: echo $(Agent.ContainerMapping	)
    - script: echo $(Agent.HomeDirectory	)    
    - script: echo $(Agent.Id	)
    - script: echo $(Agent.JobName	)
    - script: echo $(Agent.JobStatus	)
    - script: echo $(Agent.MachineName	)
    - script: echo $(Agent.Name	)
    - script: echo $(Agent.ToolsDirectory	)
    - script: echo $(Agent.WorkFolder	)
    - script: echo $(Build.ArtifactStagingDirectory)
    - script: echo $(Build.BuildId	)
    - script: echo $(Build.BuildNumber	)
    - script: echo $(Build.BuildUri	)
    - script: echo $(Build.BinariesDirectory	)
    - script: echo $(Build.ContainerId	)
    - script: echo $(Build.DefinitionName	)
    - script: echo $(Build.DefinitionVersion	)
    - script: echo $(Build.QueuedBy	)
    - script: echo $(Build.QueuedById	)
    - script: echo $(Build.Reason	)
    - script: echo $(Build.Repository.Clean	)
    - script: echo $(Build.Repository.LocalPath	)
    - script: echo $(Build.Repository.ID	)
    - script: echo $(Build.Repository.Name	)
    - script: echo $(Build.Repository.Provider	)
    - script: echo $(Build.Repository.Tfvc.Workspace	)
    - script: echo $(Build.Repository.Uri	)
    - script: echo $(Build.RequestedFor	)
    - script: echo $(Build.RequestedForEmail	)
    - script: echo $(Build.RequestedForId	)
    - script: echo $(Build.SourceBranch	)
    - script: echo $(Build.SourceBranchName	)
    - script: echo $(Build.SourcesDirectory	)
    - script: echo $(Build.SourceVersion	)
    - script: echo $(Build.SourceVersionMessage	)
    - script: echo $(Build.StagingDirectory	)

    - script: echo $(Build.Repository.Git.SubmoduleCheckout	)
    - script: echo $(Build.SourceTfvcShelveset	)
    - script: echo $(Build.TriggeredBy.BuildId	)
    - script: echo $(Build.TriggeredBy.DefinitionId	)
    - script: echo $(Build.TriggeredBy.DefinitionName	)
    - script: echo $(Build.TriggeredBy.BuildNumber	)
    - script: echo $(Build.TriggeredBy.ProjectID	)
    - script: echo $(Common.TestResultsDirectory	)

    - script: echo $(Environment.Name	)
    - script: echo $(Environment.Id	)
    - script: echo $(Environment.ResourceName	)
    - script: echo $(Environment.ResourceId	)
    - script: echo $(Strategy.Name	)
    - script: echo $(Strategy.CycleName	)

    - script: echo $(System.AccessToken )

    - script: echo $(System.CollectionId)
    - script: echo $(System.CollectionUri)
    - script: echo $(System.DefaultWorkingDirectory	)
    - script: echo $(System.DefinitionId	)
    - script: echo $(System.HostType	)
    - script: echo $(System.JobAttempt	)
    - script: echo $(System.JobDisplayName	)
    - script: echo $(System.JobId	)
    - script: echo $(System.JobName	)
    - script: echo $(System.PhaseAttempt	)


    - script: echo $(System.PhaseDisplayName	)
    - script: echo $(System.PhaseName	)
    - script: echo $(System.PlanId	)
    - script: echo $(System.PullRequest.IsFork	)
    - script: echo $(System.PullRequest.PullRequestId	)
    - script: echo $(System.PullRequest.PullRequestNumber	)
    - script: echo $(System.PullRequest.SourceBranch	)
    - script: echo $(System.PullRequest.SourceRepositoryURI	)
    - script: echo $(System.PullRequest.TargetBranch	)
    - script: echo $(System.StageAttempt	)
    - script: echo $(System.StageDisplayName	)
    - script: echo $(System.StageName	)
    - script: echo $(System.TeamFoundationCollectionUri	)


    - script: echo $(System.TeamProject	)
    - script: echo $(System.TeamProjectId	)
    - script: echo $(System.TimelineId	)   